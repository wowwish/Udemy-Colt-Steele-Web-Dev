<% layout('layouts/boilerplate') %>
    <!-- give relative path to the views directory -->
    <div id="cluster-map"></div>
    <h1>All Campgrounds</h1>
    <ul>
        <% for(let campground of campgrounds) { %>
            <div class="card mb-3">
                <div class="row">
                    <div class="col-md-4">
                        <% if(campground.images.length) { %>
                            <img class="img-fluid" src="<%= campground.images[0].url %>" alt="">
                            <% } else { %>
                                <!-- Providing a default image in case the images array is empty -->
                                <img class="img-fluid"
                                    src="https://res.cloudinary.com/dyfjqb3jc/image/upload/v1653760151/YelpCamp/u9yjlkwwg4sa22ia1vix.jpg"
                                    alt="">
                                <% } %>
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">
                                <%= campground.title %>
                            </h5>
                            <p class="card-text">
                                <%= campground.description %>
                            </p>
                            <p class="card-text">
                                <small class="text-muted">
                                    <%= campground.location %>
                                </small>
                            </p>
                            <a class="btn btn-primary" href="/campgrounds/<%=campground._id%>">View <%= campground.title
                                    %></a>
                        </div>
                    </div>
                </div>
            </div>
            <% } %>

    </ul>
    <script>
        // have a centralized .env file from which we can extract token to third-party apps and middleware
        mapToken = '<%-process.env.MAPBOX_TOKEN%>';
        // Send our data through for clusters in the map. Encapsulate our data as value to the key 'features', following
        // the format of the sample geoJSON file provided in the boilerplate code for the cluster Map
        const campgrounds = {features: <%- JSON.stringify(campgrounds) %>}
        // IMPORTANT VULNERABILITY: Note that using '<%- %>' ejs tags does not escape any HTML conetent or 
        // special characters within it like '<%= %>' does. This helps us get the raw JSON from stringify into the
        // map creation script here, But it is a security vulnerability where cross-site-scripting (XSS) can 
        // be performed to inject html content. This needs to be addressed. As an example, add '<h1>H1</h1>' to a 
        // Campground title and check out the Map Marker Popup Text. Another exploit is to edit the campground title 
        // by adding "<script>alert('haha, got ya !')<\/script>" to the end of a campground title and submitting.
        // One solution is to replace the JOI Validator Schemas we use with Express Validator Schemas as it accounts
        // for these XSS issues as well.
    </script>
    <script src="/javascripts/clusterMap.js"></script>
    <!-- layout(view) from ejs-mate,
When called anywhere inside a template, requests that the output of the current template be passed to the given 
view as the 'body' local. Use this to specify layouts from within your template, which is recommended with Express 3.0, 
since the app-level layout functionality has been removed. -->

    <!-- The entire content in this file will be passed as the 'body' local into the boilerplate.ejs file-->

